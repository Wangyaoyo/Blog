(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{498:function(s,t,a){"use strict";a.r(t);var n=a(4),r=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"常用命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用命令"}},[s._v("#")]),s._v(" 常用命令")]),s._v(" "),a("p",[s._v("展示目录下文件列表 ： ls"),a("br"),s._v("\n查看目录下文件权限 ： ll"),a("br"),s._v("\n动态查看日志 ： tail  -f   日志名称"),a("br"),s._v("\n查看完整文件 ： cat  文件名称\n查看当前应用进程 ： ps  -ef | grep  nginx\n根据进程号杀死服务 ： kill  -9  进程号\n根据进程号查询对应的端口号 ： netstat  -nap | grep 进程号\n根据端口号查询对应的进程号 ： netstat  -nap | grep 端口号\n关停服务   ./xx.jar  stop\n启动服务   ./xx.jar  start\n查看当前服务器剩余资源：free  -m\n查看当前文件夹大小 ：du  -sh"),a("br"),s._v("\n查看当前目录下所有文件的大小 ： du -sh  *\n删除文件 ： rm  -f 文件名\n重命名文件 ： mv  老文件名  新文件名")]),s._v(" "),a("h2",{attrs:{id:"安装pm2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装pm2"}},[s._v("#")]),s._v(" 安装pm2")]),s._v(" "),a("p",[s._v("基于node.js的进程管理器：守护、监控、日志的一整套完整的功能。")]),s._v(" "),a("p",[a("code",[s._v("npm install -g pm2")])]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("pm2 stop\npm2 list \npm2 describe id 启动程序的详细信息 pm2 describe id\n")])])]),a("h2",{attrs:{id:"部署项目"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#部署项目"}},[s._v("#")]),s._v(" 部署项目")]),s._v(" "),a("p",[s._v("安装git\n安装node\n安装nginx")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("cd "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("usr"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("local"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("src\nwget http"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("nginx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("org"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("download"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("nginx"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.1")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("tar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("gz\ntar "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("zxvf nginx"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.1")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("tar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("gz\ncd nginx"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.1")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".10")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("configure\nmake      #make的过程是把各种语言写的源码文件，变成可执行文件和各种库文件\nmake install#make install是把这些编译出来的可执行文件和库文件复制到合适的地方\n\nps "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("ef"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("grep nginx \t\t#看是否启动\n")])])]),a("p",[s._v("nginx常用操作")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("nginx "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("s reload  ：修改配置后重新加载生效\nnginx "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("s reopen  ：重新打开日志文件\nnginx "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("t "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("c "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("path"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("to"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("nginx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("conf 测试nginx配置文件是否正确\n\n关闭nginx：\nnginx "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("s stop  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("快速停止nginx\n         quit  ：完整有序的停止nginx\n\n其他的停止nginx 方式：\n\nps "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("ef "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" grep nginx\n\nkill "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("QUIT")]),s._v(" 主进程号     ：从容停止Nginx\nkill "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("TERM")]),s._v(" 主进程号     ：快速停止Nginx\npkill "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),s._v(" nginx          ：强制停止Nginx\n")])])]),a("ul",[a("li",[a("p",[s._v("修改线上配置")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" url "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" debug "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/api/lyric'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'http://主机IP/api/lyric'")]),s._v("\n")])])]),a("p",[s._v("config/index.js   build下的")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("assetsPublicPath  修改为空\n\n含义：\nassetsRoot "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 在当前目录的上一级 的 dist目录下输出资源文件\nassetsSubDirectory"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 把所有的静态资源打包到 dist下的 assets文件夹下\nassetsPublicPath "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("代表生成的index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("html文件，里面引入资源时，路径前面要加上 assetsPublicPath的值\n")])])])]),s._v(" "),a("li",[a("p",[s._v("配置nginx.conf文件")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("proxy_pass 表示你所有访问 你的域名"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("music"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" 的请求都代理到 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".0")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9000")]),s._v(" 上了。还记得我们刚才起的 node 服务吗，这里的端口号要对上，对于我这个例子而言，请求 http"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("主机名"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("music"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" 全部代理到我的 node 服务，所以就可以打开页面了。ngnix 配置完成记得保存，然后在命令行运行 nginx "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("s reload 重启 nginx 服务。\n\n如果你想配置多个项目，就配置不同的 location 代理到不同的端口即可。\n")])])])]),s._v(" "),a("li",[a("p",[s._v("部署")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("git pull 拉取代码\nnpm install 安装依赖\nnpm run buid 打包项目\npm2管理node服务 pm2 start prod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("server"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("js "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("i "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n启动nginx "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("usr"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("local"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("nginx"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("sbin"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("nginx\n")])])])]),s._v(" "),a("li",[a("p",[s._v("踩坑记：")]),s._v(" "),a("p",[s._v("未置空"),a("code",[s._v("assetsPublicPath")])]),s._v(" "),a("p",[s._v("访问项目报错：502 Bad Gateway  如下设置：")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("setsebool "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("P")]),s._v(" httpd_can_network_connect "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" #"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("并重启虚拟机"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),a("p",[s._v("端口未开，防火墙添加端口通过\n2020.05.03 修改了nginx.conf文件没有重启nginx")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);